#BlueJ class context
comment0.target=Quiz
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=
comment10.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment11.params=
comment11.target=void\ testLowestHumidityInManyFiles()
comment12.params=parser
comment12.target=double\ averageTemperatureinFile(org.apache.commons.csv.CSVParser)
comment13.params=
comment13.target=void\ testAverageTemperatureinFile()
comment14.params=parser\ value
comment14.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment15.params=
comment15.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=
comment3.target=org.apache.commons.csv.CSVRecord\ coldestInManyDays()
comment4.params=currentRow\ smallestSoFar
comment4.target=org.apache.commons.csv.CSVRecord\ getsmallestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment5.params=
comment5.target=void\ testColdestInManyDays()
comment6.params=
comment6.target=java.lang.String\ fileWithColdestTemperature()
comment7.params=
comment7.target=void\ testFileWithColdestTemperature()
comment8.params=parser
comment8.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testLowestHumidityInFile()
numComments=16
